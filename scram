#!/usr/local/bin/hl -f
uses system, ctype, list, lists, arith;

dec le_num_asm : list num # num -> list num;
--- le_num_asm(nil, n) <= [];
--- le_num_asm(x::xs, n) <= (255^n*x)::le_num_asm(xs, n-1);

dec le_int_from_bytes : list num -> num;
--- le_int_from_bytes(l) <= sum(le_num_asm(l, length(l)-1));

dec rnd_bytes : num -> list num;
--- rnd_bytes n <= map ord (front(n, (read "/dev/urandom")));

dec rnd_num : num -> num;
--- rnd_num(l) <= le_int_from_bytes(rnd_bytes(u)) mod (l+1)
		  where u==ceil(log(l+1)/log(256));

dec shuf : list alpha -> list alpha;
--- shuf [] <= [];
--- shuf (e::nil) <= [e];
--- shuf (l) <= l@r :: shuf(front(r, l)<>after(r+1, l)) where r==rnd_num(length(l)-1);

dec midshuf : list alpha -> list alpha;
--- midshuf([]) <= [];
--- midshuf(x::nil) <= [x];
--- midshuf(x::xs) <= x::shuf(init(xs))<>[last(xs)];

dec wordshuf : list char # list char -> list char;
--- wordshuf([], t) <= midshuf(t);
--- wordshuf(x::xs, []) <= if isalpha(x) then wordshuf(xs, [x]) else x::wordshuf(xs, []);
--- wordshuf(x::xs, t) <= if isalpha(x) then wordshuf(xs, t<>[x]) else midshuf(t)<>[x]<>wordshuf(xs, []);

dec wswrap : list char -> list char;
--- wswrap(l) <= wordshuf(l, []);

write(map wswrap gets);
